@page
@model ProjectPRN221_LIBManagement.Pages.Home.RentBookModel
@{
    Layout = "_UserLayout";
}

<style>
    .custom-card {
        border: none;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
        border-radius: 15px;
        background: #ffffff;
        -webkit-animation: slideIn 0.5s ease-out;
        animation: slideIn 0.5s ease-out;
    }

    .card-header {
        background: linear-gradient(135deg, #28a745, #20c997);
        color: white;
        border-radius: 15px 15px 0 0 !important;
        padding: 1.5rem;
    }

    .book-info-summary {
        background-color: #f8f9fa;
        padding: 1.5rem;
        border-radius: 10px;
        border-left: 4px solid #28a745;
    }

    .book-info-item {
        display: flex;
        align-items: center;
        margin-bottom: 1rem;
        padding: 0.5rem;
        background: white;
        border-radius: 8px;
        transition: all 0.3s ease;
    }

        .book-info-item:hover {
            transform: translateX(5px);
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }

        .book-info-item i {
            color: #28a745;
            margin-right: 1rem;
            font-size: 1.2rem;
            width: 24px;
        }

        .book-info-item p {
            margin: 0;
            font-size: 1rem;
        }

    .date-picker-wrapper {
        position: relative;
        margin-bottom: 0.5rem;
    }

        .date-picker-wrapper input {
            padding: 0.75rem;
            border: 2px solid #e9ecef;
            border-radius: 8px;
            transition: all 0.3s ease;
        }

            .date-picker-wrapper input:focus {
                border-color: #28a745;
                box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.25);
            }

    .form-label {
        font-weight: 600;
        margin-bottom: 0.5rem;
    }

    .btn {
        padding: 0.75rem 1.5rem;
        border-radius: 8px;
        font-weight: 600;
        transition: all 0.3s ease;
    }

    .btn-primary {
        background: linear-gradient(135deg, #28a745, #20c997);
        border: none;
    }

        .btn-primary:hover {
            background: linear-gradient(135deg, #218838, #1e7e34);
            transform: translateY(-2px);
        }

    .btn-secondary {
        background: #6c757d;
        border: none;
    }

        .btn-secondary:hover {
            background: #5a6268;
            transform: translateY(-2px);
        }

    .alert {
        border-radius: 8px;
        padding: 1rem;
    }

    .text-muted {
        font-size: 0.85rem;
    }

  /*   @@-webkit-keyframes slideIn {
        from {
            opacity: 0;
            -webkit-transform: translateY(20px);
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            -webkit-transform: translateY(0);
            transform: translateY(0);
        }
    }

    @@keyframes slideIn {
        from {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    } */
</style>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="custom-card">
                <div class="card-header">
                    <h4 class="card-title mb-0 d-flex align-items-center">
                        <i class="fas fa-book-reader me-2"></i>
                        Rent Book
                    </h4>
                </div>
                <div class="card-body p-4">
                    <form method="post">
                        <input type="hidden" asp-for="BookId" />
                        <div class="book-info-summary mb-4">
                            <h6 class="mb-3 text-success fw-bold">
                                <i class="fas fa-info-circle me-2"></i>Book Information
                            </h6>
                            <div class="book-info-item">
                                <i class="fas fa-book"></i>
                                <p><strong>Title:</strong> @Model.Book?.Title</p>
                            </div>
                            <div class="book-info-item">
                                <i class="fas fa-user-edit"></i>
                                <p><strong>Author:</strong> @Model.Book?.Author.AuthorName</p>
                            </div>
                            <div class="book-info-item">
                                <i class="fas fa-building"></i>
                                <p><strong>Publisher:</strong> @Model.Book?.Publisher.PublisherName</p>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-4">
                                <label class="form-label">
                                    <i class="fas fa-calendar-plus me-2 text-success"></i>Borrow Date
                                </label>
                                <div class="date-picker-wrapper">
                                    <input type="date" asp-for="BorrowDate" class="form-control" id="borrowDate" required />
                                </div>
                                <small class="text-muted">
                                    <i class="fas fa-info-circle me-1"></i>Select a date up to 7 days ahead
                                </small>
                                <span asp-validation-for="BorrowDate" class="text-danger"></span>
                            </div>

                            <div class="col-md-6 mb-4">
                                <label class="form-label">
                                    <i class="fas fa-calendar-check me-2 text-success"></i>Return Date
                                </label>
                                <div class="date-picker-wrapper">
                                    <input type="date" asp-for="ReturnDate" class="form-control" id="returnDate" required />
                                </div>
                                <small class="text-muted">
                                    <i class="fas fa-info-circle me-1"></i>Within 30 days from borrow date
                                </small>
                                <span asp-validation-for="ReturnDate" class="text-danger"></span>
                            </div>
                        </div>

                        @if (!string.IsNullOrEmpty(Model.ErrorMessage))
                        {
                            <div class="alert alert-danger d-flex align-items-center">
                                <i class="fas fa-exclamation-circle me-2"></i>
                                <span>@Model.ErrorMessage</span>
                            </div>
                        }

                        <div class="d-flex justify-content-between mt-4">
                            <a asp-page="/Home/ShopDetails" asp-route-id="@Model.BookId" class="btn btn-secondary">
                                <i class="fas fa-arrow-left me-2"></i>Back
                            </a>
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-check me-2"></i>Confirm Rent
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const borrowDateInput = document.getElementById('borrowDate');
        const returnDateInput = document.getElementById('returnDate');

        const today = new Date();
        const maxBorrowDate = new Date();
        maxBorrowDate.setDate(today.getDate() + 7);

        const formatDate = (date) => date.toISOString().split('T')[0];

        borrowDateInput.min = formatDate(today);
        borrowDateInput.max = formatDate(maxBorrowDate);
        borrowDateInput.value = formatDate(today);

        // thay doi return date theo borrow date
        borrowDateInput.addEventListener('change', function () {
            const selectedBorrowDate = new Date(this.value);
            const minReturnDate = new Date(selectedBorrowDate);
            minReturnDate.setDate(selectedBorrowDate.getDate() + 1);

            const maxReturnDate = new Date(selectedBorrowDate);
            maxReturnDate.setDate(selectedBorrowDate.getDate() + 30);

            returnDateInput.min = formatDate(minReturnDate);
            returnDateInput.max = formatDate(maxReturnDate);

            // Set default cho return date la 14 ngay tu borrow date
            const currentReturnDate = new Date(returnDateInput.value);
            if (currentReturnDate < minReturnDate || currentReturnDate > maxReturnDate) {
                const defaultReturnDate = new Date(selectedBorrowDate);
                defaultReturnDate.setDate(selectedBorrowDate.getDate() + 14);
                returnDateInput.value = formatDate(defaultReturnDate);
            }
        });

        
        borrowDateInput.dispatchEvent(new Event('change'));
    });
</script>