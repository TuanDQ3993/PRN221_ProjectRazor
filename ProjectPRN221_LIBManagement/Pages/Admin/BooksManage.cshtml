@page
@model ProjectPRN221_LIBManagement.Pages.Admin.BooksManageModel
@{

}
@using ProjectPRN221_LIBManagement.Models;

<style>
    .error-message {
        text-align: center; /* c?n gi?a n?i dung */
        font-weight: bold; /* làm n?i b?t */

        font-size: larger;
    }

    .filter {
        display: flex;
        align-items: center;
        margin-bottom: 10px;
    }

    .filter1 {
        display: flex;
        align-items: center;
    }

    .texta {
        margin-right: 10px;
        font-weight: bold;
        font-size: 18px;
    }

    select {
        padding: 8px;
        border: 1px solid #ccc;
        border-radius: 4px;
    }

    /* Tùy ch?nh các select n?m trong .filter */
    .filter select {
        margin-right: 10px;
    }

        /* Tùy ch?nh màu n?n khi hover trên select */
        .filter select:hover {
            background-color: #f5f5f5;
        }

    select:hover {
        background-color: #f5f5f5;
    }

    input[type="submit"] {
        padding: 10px 15px;
        background-color: #4CAF50;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

        /* Hi?u ?ng hover cho nút Filter */
        input[type="submit"]:hover {
            background-color: #45a049;
        }

    .search-p {
        justify-content: right;
    }
</style>

<div class="row">
    <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12" style="margin-top: 93px;">

        @if (TempData["Message"] != null)
        {
            <div class="alert alert-success">
                @TempData["Message"]
            </div>
        }
        <div class="filter1">
            <form asp-page="BooksManage" method="get">
                <div class="filter">
                    <a class="texta" style=" color: #454444f7;">Filter:</a>

                    <select name="publisherId">
                        <option value="0">Select Publisher</option>
                        @foreach (var emp in Model.publishers)
                        {
                            <option value="@emp.PublisherId" selected="@(emp.PublisherId == Model.pId)">@emp.PublisherName</option>
                        }
                    </select>
                    <div>
                        <select name="authorId">
                            <option value="0">select Author</option>
                            @foreach (var emp in Model.authors)
                            {
                                <option value="@emp.AuthorId" selected="@(emp.AuthorId == Model.aId)">@emp.AuthorName</option>
                            }
                        </select>
                    </div>
                    <div>
                        <select name="categoryId">
                            <option value="0">select Category</option>
                            @foreach (var emp in Model.categories)
                            {
                                <option value="@emp.CategoryId" selected="@(emp.CategoryId == Model.cid)"> @emp.CategoryName</option>
                            }

                        </select>
                    </div>
                    <input type="submit" value="Filter" />
                </div>
            </form>
            <div style="margin-left: 15px;">
                <a asp-page="AddBook"><button type="button" class="btn btn-danger">Add User</button> </a>
            </div>

            <!-- Nút Import, mở modal khi nhấn -->
            <div style="margin-left: 15px;">
                <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#importModal">
                    Import
                </button>
            </div>
            <!-- Modal Bootstrap -->
            <div class="modal fade" id="importModal" tabindex="-1" aria-labelledby="importModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="importModalLabel">Import Books from Excel</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>

                        <div class="modal-body">
                            <form method="post" enctype="multipart/form-data" asp-page-handler="Import">
                                <div class="mb-3">
                                    <label for="ExcelFile" class="form-label">Select Excel File</label>
                                    <input type="file" id="ExcelFile" name="ExcelFile" class="form-control" required />
                                </div>
                                <button type="submit" class="btn btn-primary">Upload</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>

            <div class="input-group rounded search-p">
                <form asp-page="BooksManage" method="get">
                    <input type="search" name="searchString" class="form-control rounded" value="@Model.search" placeholder="Search" aria-label="Search" aria-describedby="search-addon" style="max-width: 95%" />
                </form>
                <span class="input-group-text border-0" id="search-addon">
                    <i class="fas fa-search"></i>
                </span>
            </div>
        </div>
        <div class="card">
            <h5 class="card-header">List User</h5>
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table" id="userTable">
                        <thead class="bg-light">
                            <tr class="border-0">
                                <th class="border-0" onclick="sortTable(0)">BookID</th>
                                <th class="border-0" onclick="sortTable(1)">Title</th>
                                <th class="border-0" onclick="sortTable(2)">Author</th>
                                <th class="border-0" onclick="sortTable(3)">Publisher</th>
                                <th class="border-0" onclick="sortTable(4)">YearPublished</th>
                                <th class="border-0" onclick="sortTable(5)">ISBN</th>
                                <th class="border-0" onclick="sortTable(6)">Category</th>
                                <th class="border-0" onclick="sortTable(7)">Quantity</th>
                                <th class="border-0">Feature</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (Book emp in Model.Books)
                            {
                                <tr>
                                    <td>@emp.BookId</td>
                                    <td>@emp.Title</td>
                                    <td>@emp.Author?.AuthorName</td>
                                    <td>@emp.Publisher?.PublisherName</td>
                                    <td>@emp.YearPublished</td>
                                    <td>@emp.Isbn</td>
                                    <td>@emp.Category?.CategoryName</td>
                                    <td>@emp.Quantity</td>
                                    <td>
                                        <a class="fas fa-edit edit-icon" asp-page="EditBook" asp-route-id="@emp.BookId"></a>
                                        <a class="fas fa-trash eye-icon" asp-page="DeleteBook" asp-route-id="@emp.BookId"></a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <paging></paging>
            </div>
        </div>
    </div>
</div>
<!-- ============================================================== -->
<!-- end wrapper  -->
<!-- ============================================================== -->

<script src="~/assets/vendor/jquery/jquery-3.3.1.min.js"></script>
<!-- bootstrap bundle js-->
<script src="~/assets/vendor/bootstrap/js/bootstrap.bundle.js"></script>
<!-- slimscroll js-->
<script src="~/assets/vendor/slimscroll/jquery.slimscroll.js"></script>
<!-- chartjs js-->
<script src="~/assets/vendor/charts/charts-bundle/Chart.bundle.js"></script>
<script src="~/assets/vendor/charts/charts-bundle/chartjs.js"></script>

<!-- main js-->
<script src="~/assets/libs/js/main-js.js"></script>
<!-- jvactormap js-->
<script src="~/assets/vendor/jvectormap/jquery-jvectormap-2.0.2.min.js"></script>
<script src="~/assets/vendor/jvectormap/jquery-jvectormap-world-mill-en.js"></script>
<!-- sparkline js-->
<script src="~/assets/vendor/charts/sparkline/jquery.sparkline.js"></script>
<script src="~/assets/vendor/charts/sparkline/spark-js.js"></script>
<!-- dashboard sales js-->
<script src="~/assets/libs/js/dashboard-sales.js"></script>
<script>
    function sortTable(colIndex) {
        var table = document.getElementById('userTable');
        var rows = table.rows;
        var switching = true;
        var shouldSwitch = false;
        var dir = 'asc';

        while (switching) {
            switching = false;
            for (var i = 1; i < rows.length - 1; i++) {
                shouldSwitch = false;
                var x = rows[i].getElementsByTagName('td')[colIndex];
                var y = rows[i + 1].getElementsByTagName('td')[colIndex];
                if (colIndex === 0) { // If sorting by id column
                    if (dir == 'asc') {
                        if (parseInt(x.innerHTML) > parseInt(y.innerHTML)) {
                            shouldSwitch = true;
                            break;
                        }
                    } else if (dir == 'desc') {
                        if (parseInt(x.innerHTML) < parseInt(y.innerHTML)) {
                            shouldSwitch = true;
                            break;
                        }
                    }
                } else {
                    if (dir == 'asc') {
                        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                            shouldSwitch = true;
                            break;
                        }
                    } else if (dir == 'desc') {
                        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                            shouldSwitch = true;
                            break;
                        }
                    }
                }
            }
            if (shouldSwitch) {
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
            } else {
                if (dir == 'asc') {
                    dir = 'desc';
                } else {
                    dir = 'asc';
                }
            }
        }
    }




</script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Kiểm tra nếu TempData có thông báo thì hiển thị toast
        const importSuccess = '@TempData["Message"]';
        if (importSuccess) {
            const toastElement = document.getElementById('importSuccessToast');
            const toast = new bootstrap.Toast(toastElement);
            toast.show();
        }
    });
</script>

